<template>
  <div class="app">
    <button class="btn" @click="inc">Increment</button>
    <button class="btn" @click="dec">Decrement</button>
    <div class="count">{{ count }}</div>
  </div>
</template>
<script setup>
use std::cell::{Cell, RefCell};
pub struct State { pub count: Cell<i32>, pub title: RefCell<String> }
impl State {
  pub fn new() -> Self { Self { count: Cell::new(0), title: RefCell::new("Velox App".into()) } }
  pub fn inc(&self) { let v = self.count.get()+1; self.count.set(v); *self.title.borrow_mut() = format!("Velox App — {}", v); }
  pub fn dec(&self) { let v = self.count.get()-1; self.count.set(v); *self.title.borrow_mut() = format!("Velox App — {}", v); }
}
</script>
<style>
  .app { margin-left: 40px; width: 100%; height: 100%; display: block; background: #101216; color: #e6edf3; font-size: 18px; }
  .btn { padding-left: 15px; width: 200px; height: 80px; background: #3478f6; color: #ffffff; font-size: 18px; font-weight: bold; line-height: 80px; }
  .btn:hover { background: #4a8df8; }
  .count { margin-top: 12px; font-size: 36px; text-decoration: underline; line-height: 20px; }
</style>
